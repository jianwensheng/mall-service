<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oruit.share.dao.AbnormalOperationMapper" >
  <resultMap id="BaseResultMap" type="com.oruit.share.domain.AbnormalOperation" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_token" property="userToken" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="param" property="param" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, user_token, method, param, ip, user_agent, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_abnormal_operation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_abnormal_operation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.oruit.share.domain.AbnormalOperation" >
    insert into t_abnormal_operation (id, user_id, user_token, 
      method, param, ip, 
      user_agent, create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userToken,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{userAgent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.oruit.share.domain.AbnormalOperation" >
    insert into t_abnormal_operation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userToken != null" >
        user_token,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="param != null" >
        param,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="userAgent != null" >
        user_agent,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userToken != null" >
        #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oruit.share.domain.AbnormalOperation" >
    update t_abnormal_operation
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userToken != null" >
        user_token = #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oruit.share.domain.AbnormalOperation" >
    update t_abnormal_operation
    set user_id = #{userId,jdbcType=BIGINT},
      user_token = #{userToken,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>